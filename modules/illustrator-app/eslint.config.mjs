import eslintJs from "@eslint/js";
import { createConfigForNuxt } from "@nuxt/eslint-config/flat";
import eslintImportX from "eslint-plugin-import-x";
import vue from "eslint-plugin-vue";
import globals from "globals";
import vueEslintParser from "vue-eslint-parser";

export default createConfigForNuxt({}, [
  {
    ignores: ["!*.d.ts", "!*.config.ts", "**/.*"],
    languageOptions: {
      parser: vueEslintParser,
      parserOptions: {
        ecmaVersion: "latest",
        parser: "@typescript-eslint/parser",
        sourceType: "module",
      },
      globals: {
        ...globals.browser,
        ...globals.es2021,
        ...globals.node,
      },
    },
    plugins: {
      vue,
    },
    settings: {
      "import-x/parsers": {
        // "@typescript-eslint/parser": [".ts", ".tsx"],
        "vue-eslint-parser": [".vue"],
      },
    },
    rules: {
      quotes: ["warn", "double"],
      semi: ["warn", "always"],
      indent: ["warn", 2],
      "no-multi-spaces": ["error"],
      "vue/no-v-html": "off",
      "vue/multi-word-component-names": "off",
      "vue/no-multiple-template-root": "off",
      "vue/max-attributes-per-line": [
        "error",
        { singleline: 999, multiline: 1 },
      ],
      // our tsconfigs depend on files generated by Nuxt, which aren't available in CI
      // and unresolved imports will fail anyway during build
      "import-x/no-unresolved": "off",
      // we don't have default exports in .vue files
      "import-x/default": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/no-dynamic-delete": "off",
      "@typescript-eslint/no-invalid-void-type": "off",
      "vue/valid-v-slot": "off",
    },
  },
]).prepend(
  ...vue.configs["flat/recommended"],
  eslintJs.configs.recommended,
  eslintImportX.flatConfigs.recommended,
  eslintImportX.flatConfigs.typescript
);
