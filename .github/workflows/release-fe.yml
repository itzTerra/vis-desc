name: Release Frontend

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (leave blank to auto-generate v<package.json version>)'
        required: false
      prerelease:
        description: 'Mark as prerelease'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: Production
    defaults:
      run:
        working-directory: modules/illustrator-app/services/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
            version: 9

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: |
            modules/illustrator-app/services/frontend/pnpm-lock.yaml

      - name: Derive version & commit hash
        id: vars
        run: |
          VERSION=$(node -p "require('../../package.json').version")
          if [ -z "${{ inputs.tag }}" ]; then
            TAG="v$VERSION"
          else
            TAG="${{ inputs.tag }}"
          fi
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "COMMIT_HASH=${GITHUB_SHA}" >> $GITHUB_ENV
          echo version=$VERSION >> $GITHUB_OUTPUT
          echo tag=$TAG >> $GITHUB_OUTPUT
          echo commit=${GITHUB_SHA} >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build for release
        env:
          VITE_APP_VERSION: ${{ steps.vars.outputs.version }}
          VITE_COMMIT_HASH: ${{ steps.vars.outputs.commit }}
          VITE_API_BASE_URL: ${{ vars.VITE_API_BASE_URL }}
          NUXT_PUBLIC_OPEN_FETCH_API_BASE_URL: ${{ vars.NUXT_PUBLIC_OPEN_FETCH_API_BASE_URL }}
        run: pnpm run generate

      - name: Package artifact
        run: |
          tar -czf dist-${{ steps.vars.outputs.version }}.tar.gz -C ./.output/public .

      - name: Create Git tag (if new)
        run: |
          if git rev-parse $TAG >/dev/null 2>&1; then
            echo "Tag $TAG already exists"; exit 0; fi
          git tag $TAG
          git push origin $TAG

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: v${{ steps.vars.outputs.version }}
          prerelease: ${{ inputs.prerelease }}
          files: modules/illustrator-app/services/frontend/dist-${{ steps.vars.outputs.version }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release summary
        run: |
          echo "### Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "Version: $APP_VERSION" >> $GITHUB_STEP_SUMMARY
          echo "Tag: $TAG" >> $GITHUB_STEP_SUMMARY
          echo "Commit: $COMMIT_HASH" >> $GITHUB_STEP_SUMMARY
          echo "Prerelease: ${{ inputs.prerelease }}" >> $GITHUB_STEP_SUMMARY
